{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\hlf-ca-interface\\\\frontend\\\\src\\\\components\\\\Interface.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass Interface extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleUserLoginChange = event => {\n      event.preventDefault();\n      this.setState({\n        login_username: event.target.value\n      });\n    };\n\n    this.handlePasswordLoginChange = event => {\n      event.preventDefault();\n      this.setState({\n        login_password: event.target.value\n      });\n    };\n\n    this.handleUserRegisChange = event => {\n      event.preventDefault();\n      this.setState({\n        regis_username: event.target.value\n      });\n    };\n\n    this.handlePasswordRegisChange = event => {\n      event.preventDefault();\n      this.setState({\n        regis_password: event.target.value\n      });\n    };\n\n    this.state = {\n      login_username: \"\",\n      login_password: \"\",\n      regis_username: \"\",\n      regis_password: \"\",\n      login_success: \"\",\n      regis_success: \"\",\n      enroll_success: \"\"\n    };\n  }\n\n  callLogin() {\n    if (this.state.login_password && this.state.login_username) {\n      const loginData = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      $.ajax({\n        url: 'http://localhost:4000/login',\n        type: 'POST',\n        contentType: \"application/json; charset=utf-8\",\n        crossDomain: true,\n        dataType: 'json',\n        data: JSON.stringify(loginData),\n        success: data => {\n          if (data.message === 'OK') {\n            this.setState({\n              login_success: true\n            });\n          } else {\n            this.setState({\n              login_success: false\n            });\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in login form fields.\");\n    }\n  }\n\n  callRegister() {\n    if (this.state.regis_password && this.state.regis_username) {\n      const regisData = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      $.ajax({\n        url: 'http://localhost:4000/register',\n        type: 'POST',\n        contentType: \"application/json; charset=utf-8\",\n        crossDomain: true,\n        dataType: 'json',\n        data: JSON.stringify(regisData),\n        success: data => {\n          if (data.message === 'OK') {\n            this.setState({\n              regis_success: true\n            });\n          } else {\n            this.setState({\n              regis_success: false\n            });\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in register form fields.\");\n    }\n  }\n\n  callEnrollAdmin() {\n    $.ajax({\n      url: 'http://localhost:4000/enroll',\n      type: 'GET',\n      contentType: \"application/json; charset=utf-8\",\n      crossDomain: true,\n      dataType: 'json',\n      success: data => {\n        if (data.message === 'OK') {\n          this.setState({\n            enroll_success: true\n          });\n          console.log('success');\n        } else {\n          this.setState({\n            enroll_success: false\n          });\n          console.log('failure');\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"interface\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"loginFormField\",\n      placeholder: \"Username\",\n      onChange: this.handleUserLoginChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"loginFormField\",\n      placeholder: \"Password\",\n      onChange: this.handlePasswordLoginChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      onClick: this.callLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"registerUserForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"regFormField\",\n      placeholder: \"Username\",\n      onChange: this.handleUserChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"regFormField\",\n      placeholder: \"Password\",\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      onClick: this.callRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"enrollAdminForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"enroll_user\",\n      onClick: this.callEnrollAdmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Enroll Admin\")));\n  }\n\n}\n\nexport default Interface;","map":{"version":3,"sources":["C:\\Dev\\hlf-ca-interface\\frontend\\src\\components\\Interface.js"],"names":["React","Component","$","Interface","constructor","props","onChange","e","setState","target","id","value","handleUserLoginChange","event","preventDefault","login_username","handlePasswordLoginChange","login_password","handleUserRegisChange","regis_username","handlePasswordRegisChange","regis_password","state","login_success","regis_success","enroll_success","callLogin","loginData","username","password","ajax","url","type","contentType","crossDomain","dataType","data","JSON","stringify","success","message","alert","callRegister","regisData","callEnrollAdmin","console","log","render","handleUserChange","handlePasswordChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass Interface extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login_username: \"\",\r\n      login_password: \"\",\r\n      regis_username: \"\",\r\n      regis_password: \"\",\r\n      login_success: \"\",\r\n      regis_success: \"\",\r\n      enroll_success: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleUserLoginChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ login_username: event.target.value });\r\n  }\r\n\r\n  handlePasswordLoginChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ login_password: event.target.value });\r\n  }\r\n\r\n  handleUserRegisChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ regis_username: event.target.value });\r\n  }\r\n\r\n  handlePasswordRegisChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ regis_password: event.target.value });\r\n  }\r\n\r\n  callLogin() {\r\n    if (this.state.login_password && this.state.login_username) {\r\n      const loginData = {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      }\r\n      $.ajax({\r\n        url: 'http://localhost:4000/login',\r\n        type: 'POST',\r\n        contentType: \"application/json; charset=utf-8\",\r\n        crossDomain: true,\r\n        dataType: 'json',\r\n        data: JSON.stringify(loginData),\r\n        success: (data) => {\r\n          if (data.message === 'OK') {\r\n            this.setState({ login_success: true });\r\n          } else {\r\n            this.setState({ login_success: false });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Please fill in login form fields.\")\r\n    }\r\n  }\r\n\r\n  callRegister() {\r\n    if (this.state.regis_password && this.state.regis_username) {\r\n      const regisData = {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      }\r\n      $.ajax({\r\n        url: 'http://localhost:4000/register',\r\n        type: 'POST',\r\n        contentType: \"application/json; charset=utf-8\",\r\n        crossDomain: true,\r\n        dataType: 'json',\r\n        data: JSON.stringify(regisData),\r\n        success: (data) => {\r\n          if (data.message === 'OK') {\r\n            this.setState({ regis_success: true });\r\n          } else {\r\n            this.setState({ regis_success: false });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Please fill in register form fields.\")\r\n    }\r\n  }\r\n\r\n  callEnrollAdmin() {\r\n    $.ajax({\r\n      url: 'http://localhost:4000/enroll',\r\n      type: 'GET',\r\n      contentType: \"application/json; charset=utf-8\",\r\n      crossDomain: true,\r\n      dataType: 'json',\r\n      success: (data) => {\r\n        if (data.message === 'OK') {\r\n          this.setState({ enroll_success: true });\r\n          console.log('success');\r\n        } else {\r\n          this.setState({ enroll_success: false });\r\n          console.log('failure');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"interface\">\r\n        <div className=\"loginForm\">\r\n          <input type=\"text\" className=\"loginFormField\" placeholder=\"Username\" onChange={this.handleUserLoginChange} />\r\n          <input type=\"password\" className=\"loginFormField\" placeholder=\"Password\" onChange={this.handlePasswordLoginChange} />\r\n          <input type=\"submit\" value=\"Login\" onClick={this.callLogin}></input>\r\n        </div>\r\n        <div className=\"registerUserForm\">\r\n          <input type=\"text\" className=\"regFormField\" placeholder=\"Username\" onChange={this.handleUserChange} />\r\n          <input type=\"password\" className=\"regFormField\" placeholder=\"Password\" onChange={this.handlePasswordChange} />\r\n          <input type=\"submit\" value=\"Register\" onClick={this.callRegister}></input>\r\n        </div>\r\n        <div className=\"enrollAdminForm\">\r\n          <button id=\"enroll_user\" onClick={this.callEnrollAdmin}>Enroll Admin</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interface;"]},"metadata":{},"sourceType":"module"}