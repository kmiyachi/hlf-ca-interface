{"ast":null,"code":"var _jsxFileName = \"/Users/kenmiyachi/LedgerSafe/hlf-ca-interface/frontend/src/components/Interface.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass Interface extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleUserLoginChange = event => {\n      event.preventDefault();\n      this.setState({\n        login_username: event.target.value\n      });\n    };\n\n    this.handlePasswordLoginChange = event => {\n      event.preventDefault();\n      this.setState({\n        login_password: event.target.value\n      });\n    };\n\n    this.handleUserRegisChange = event => {\n      event.preventDefault();\n      this.setState({\n        regis_username: event.target.value\n      });\n    };\n\n    this.handlePasswordRegisChange = event => {\n      event.preventDefault();\n      this.setState({\n        regis_password: event.target.value\n      });\n    };\n\n    this.handleAdminIdChange = event => {\n      event.preventDefault();\n      this.setState({\n        admin_id: event.target.value\n      });\n      console.log(this.state.admin_id);\n    };\n\n    this.handleAdminPwChange = event => {\n      event.preventDefault();\n      this.setState({\n        admin_pw: event.target.value\n      });\n      console.log(this.state.admin_pw);\n    };\n\n    this.state = {\n      login_username: \"\",\n      login_password: \"\",\n      regis_username: \"\",\n      regis_password: \"\",\n      admin_id: \"\",\n      admin_pw: \"\",\n      login_success: \"\",\n      regis_success: \"\",\n      enroll_success: \"\"\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleUserLoginChange = this.handleUserLoginChange.bind(this);\n    this.handleUserRegisChange = this.handleUserRegisChange.bind(this);\n    this.handlePasswordLoginChange = this.handlePasswordLoginChange.bind(this);\n    this.handlePasswordRegisChange = this.handlePasswordRegisChange.bind(this);\n    this.handleAdminIdChange = this.handleAdminIdChange.bind(this);\n    this.handleAdminPwChange = this.handleAdminPwChange.bind(this);\n    this.callLogin = this.callLogin.bind(this);\n    this.callEnrollAdmin = this.callEnrollAdmin.bind(this);\n    this.callRegister = this.callRegister.bind(this);\n  }\n\n  callLogin() {\n    if (this.state.login_password && this.state.login_username) {\n      const loginData = {\n        username: this.state.login_username,\n        password: this.state.login_password\n      };\n      $.ajax({\n        url: 'http://localhost:4000/login',\n        type: 'POST',\n        contentType: \"application/json; charset=utf-8\",\n        crossDomain: true,\n        dataType: 'json',\n        xhrFields: {\n          withCredentials: true\n        },\n        data: {\n          loginData: loginData\n        },\n        success: data => {\n          if (data.message === \"OK\") {\n            this.setState({\n              login_success: true\n            });\n            console.log('success');\n          } else {\n            this.setState({\n              login_success: false\n            });\n            console.log('failure');\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in login form fields.\");\n    }\n  }\n\n  callRegister() {\n    if (this.state.regis_password && this.state.regis_username) {\n      const regisData = {\n        username: this.state.regis_username,\n        password: this.state.regis_password\n      };\n      $.ajax({\n        url: 'http://localhost:4000/register',\n        type: 'POST',\n        contentType: \"application/json; charset=utf-8\",\n        crossDomain: true,\n        dataType: 'json',\n        xhrFields: {\n          withCredentials: true\n        },\n        data: {\n          regisData: regisData\n        },\n        success: data => {\n          if (data.message === \"OK\") {\n            this.setState({\n              regis_success: true\n            });\n            console.log('success');\n          } else {\n            this.setState({\n              regis_success: false\n            });\n            console.log('failure');\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in register form fields.\");\n    }\n  }\n\n  callEnrollAdmin() {\n    if (this.state.admin_id && this.state.admin_pw) {\n      const adminData = {\n        id: this.state.admin_id,\n        pw: this.state.admin_pw\n      };\n      console.log(adminData);\n      $.ajax({\n        url: 'http://localhost:4000/enroll',\n        context: document.body,\n        method: 'POST',\n        contentType: 'application/json; charset=utf-8',\n        crossDomain: true,\n        dataType: 'json',\n        xhrFields: {\n          withCredentials: true\n        },\n        data: {\n          enrollData: adminData\n        },\n        success: data => {\n          if (data.message === \"OK\") {\n            this.setState({\n              enroll_success: true\n            });\n            console.log('success');\n          } else {\n            this.setState({\n              enroll_success: false\n            });\n            console.log('failure');\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in admin form fields.\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"interface\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"loginFormField\",\n      placeholder: \"Username\",\n      onChange: this.handleUserLoginChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"loginFormField\",\n      placeholder: \"Password\",\n      onChange: this.handlePasswordLoginChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      onClick: this.callLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"registerUserForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"regFormField\",\n      placeholder: \"Username\",\n      onChange: this.handleUserRegisChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"regFormField\",\n      placeholder: \"Password\",\n      onChange: this.handlePasswordRegisChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      onClick: this.callRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"enrollAdminForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"adFormField\",\n      placeholder: \"Admin ID\",\n      onChange: this.handleAdminIdChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"adFormField\",\n      placeholder: \"Admin Password\",\n      onChange: this.handleAdminPwChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Enroll\",\n      onClick: this.callEnrollAdmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Interface;","map":{"version":3,"sources":["/Users/kenmiyachi/LedgerSafe/hlf-ca-interface/frontend/src/components/Interface.js"],"names":["React","Component","$","Interface","constructor","props","onChange","e","setState","target","id","value","handleUserLoginChange","event","preventDefault","login_username","handlePasswordLoginChange","login_password","handleUserRegisChange","regis_username","handlePasswordRegisChange","regis_password","handleAdminIdChange","admin_id","console","log","state","handleAdminPwChange","admin_pw","login_success","regis_success","enroll_success","bind","callLogin","callEnrollAdmin","callRegister","loginData","username","password","ajax","url","type","contentType","crossDomain","dataType","xhrFields","withCredentials","data","success","message","alert","regisData","adminData","pw","context","document","body","method","enrollData","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass Interface extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login_username: \"\",\n      login_password: \"\",\n      regis_username: \"\",\n      regis_password: \"\",\n      admin_id: \"\",\n      admin_pw: \"\",\n      login_success: \"\",\n      regis_success: \"\",\n      enroll_success: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.handleUserLoginChange = this.handleUserLoginChange.bind(this);\n    this.handleUserRegisChange = this.handleUserRegisChange.bind(this);\n    this.handlePasswordLoginChange = this.handlePasswordLoginChange.bind(this);\n    this.handlePasswordRegisChange = this.handlePasswordRegisChange.bind(this);\n    this.handleAdminIdChange = this.handleAdminIdChange.bind(this);\n    this.handleAdminPwChange = this.handleAdminPwChange.bind(this);\n    this.callLogin = this.callLogin.bind(this);\n    this.callEnrollAdmin = this.callEnrollAdmin.bind(this);\n    this.callRegister = this.callRegister.bind(this);\n\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleUserLoginChange = event => {\n    event.preventDefault()\n    this.setState({ login_username: event.target.value });\n  }\n\n  handlePasswordLoginChange = event => {\n    event.preventDefault()\n    this.setState({ login_password: event.target.value });\n  }\n\n  handleUserRegisChange = event => {\n    event.preventDefault()\n    this.setState({ regis_username: event.target.value });\n  }\n\n  handlePasswordRegisChange = event => {\n    event.preventDefault()\n    this.setState({ regis_password: event.target.value });\n  }\n\n  handleAdminIdChange = event => {\n    event.preventDefault()\n    this.setState({ admin_id: event.target.value });\n    console.log(this.state.admin_id);\n  }\n\n  handleAdminPwChange = event => {\n    event.preventDefault()\n    this.setState({ admin_pw: event.target.value });\n    console.log(this.state.admin_pw);\n  }\n\n  callLogin() {\n    if (this.state.login_password && this.state.login_username) {\n      const loginData = {\n        username: this.state.login_username,\n        password: this.state.login_password\n      }\n      $.ajax({\n        url: 'http://localhost:4000/login',\n        type: 'POST',\n        contentType: \"application/json; charset=utf-8\",\n        crossDomain: true,\n        dataType: 'json',\n        xhrFields: { withCredentials: true },\n        data: { loginData: loginData},\n        success: (data) => {\n          if (data.message === \"OK\") {\n            this.setState({ login_success: true });\n            console.log('success');\n          } else {\n            this.setState({ login_success: false });\n            console.log('failure');\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in login form fields.\")\n    }\n  }\n\n  callRegister() {\n    if (this.state.regis_password && this.state.regis_username) {\n      const regisData = {\n        username: this.state.regis_username,\n        password: this.state.regis_password\n      }\n      $.ajax({\n        url: 'http://localhost:4000/register',\n        type: 'POST',\n        contentType: \"application/json; charset=utf-8\",\n        crossDomain: true,\n        dataType: 'json',\n        xhrFields: { withCredentials: true },\n        data: { regisData: regisData},\n        success: (data) => {\n          if (data.message === \"OK\") {\n            this.setState({ regis_success: true });\n            console.log('success');\n          } else {\n            this.setState({ regis_success: false });\n            console.log('failure');\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in register form fields.\")\n    }\n  }\n\n  callEnrollAdmin() {\n    if (this.state.admin_id && this.state.admin_pw) {\n      const adminData = {\n        id: this.state.admin_id,\n        pw: this.state.admin_pw\n      }\n      console.log(adminData)\n      $.ajax({\n        url: 'http://localhost:4000/enroll',\n        context: document.body,\n        method: 'POST',\n        contentType: 'application/json; charset=utf-8',\n        crossDomain: true,\n        dataType: 'json',\n        xhrFields: { withCredentials: true },\n        data: {enrollData:adminData},\n        success: (data) => {\n          if (data.message === \"OK\") {\n            this.setState({ enroll_success: true });\n            console.log('success');\n          } else {\n            this.setState({ enroll_success: false });\n            console.log('failure');\n          }\n        }\n      });\n    }\n    else {\n      alert(\"Please fill in admin form fields.\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"interface\">\n        <div className=\"loginForm\">\n          <input type=\"text\" className=\"loginFormField\" placeholder=\"Username\" onChange={this.handleUserLoginChange} />\n          <input type=\"password\" className=\"loginFormField\" placeholder=\"Password\" onChange={this.handlePasswordLoginChange} />\n          <input type=\"submit\" value=\"Login\" onClick={this.callLogin}></input>\n        </div>\n        <div className=\"registerUserForm\">\n          <input type=\"text\" className=\"regFormField\" placeholder=\"Username\" onChange={this.handleUserRegisChange} />\n          <input type=\"password\" className=\"regFormField\" placeholder=\"Password\" onChange={this.handlePasswordRegisChange} />\n          <input type=\"submit\" value=\"Register\" onClick={this.callRegister}></input>\n        </div>\n        <div className=\"enrollAdminForm\">\n          <input type=\"text\" className=\"adFormField\" placeholder=\"Admin ID\" onChange={this.handleAdminIdChange} />\n          <input type=\"password\" className=\"adFormField\" placeholder=\"Admin Password\" onChange={this.handleAdminPwChange} />\n          <input type=\"submit\" value=\"Enroll\" onClick={this.callEnrollAdmin}></input>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Interface;"]},"metadata":{},"sourceType":"module"}