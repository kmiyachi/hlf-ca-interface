{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\hlf-ca-interface\\\\frontend\\\\src\\\\components\\\\Interface.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass Interface extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleUserLoginChange = event => {\n      event.preventDefault();\n      this.setState({\n        login_username: event.target.value\n      });\n    };\n\n    this.handlePasswordLoginChange = event => {\n      event.preventDefault();\n      this.setState({\n        login_password: event.target.value\n      });\n    };\n\n    this.handleUserRegisChange = event => {\n      event.preventDefault();\n      this.setState({\n        regis_username: event.target.value\n      });\n    };\n\n    this.handlePasswordRegisChange = event => {\n      event.preventDefault();\n      this.setState({\n        regis_password: event.target.value\n      });\n    };\n\n    this.handleAdminIdChange = event => {\n      event.preventDefault();\n      this.setState({\n        admin_id: event.target.value\n      });\n    };\n\n    this.handleAdminPwChange = event => {\n      event.preventDefault();\n      this.setState({\n        admin_pw: event.target.value\n      });\n    };\n\n    this.state = {\n      login_username: \"\",\n      login_password: \"\",\n      regis_username: \"\",\n      regis_password: \"\",\n      admin_id: \"\",\n      admin_pw: \"\",\n      login_success: \"\",\n      regis_success: \"\",\n      enroll_success: \"\"\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleUserLoginChange = this.handleUserLoginChange.bind(this);\n    this.handleUserRegisChange = this.handleUserRegisChange.bind(this);\n    this.handlePasswordLoginChange = this.handlePasswordLoginChange.bind(this);\n    this.handlePasswordRegisChange = this.handlePasswordRegisChange.bind(this);\n    this.handleAdminIdChange = this.handleAdminIdChange.bind(this);\n    this.handleAdminPwChange = this.handleAdminPwChange.bind(this);\n    this.callLogin = this.callLogin.bind(this);\n    this.callEnrollAdmin = this.callEnrollAdmin.bind(this);\n    this.callRegister = this.callRegister.bind(this);\n  }\n\n  callLogin() {\n    if (this.state.login_password && this.state.login_username) {\n      const loginData = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      $.ajax({\n        url: 'http://localhost:4000/login',\n        type: 'POST',\n        contentType: \"application/json; charset=utf-8\",\n        crossDomain: true,\n        dataType: 'json',\n        data: JSON.stringify(loginData),\n        success: data => {\n          console.log(data);\n\n          if (data) {\n            this.setState({\n              login_success: true\n            });\n            console.log('success');\n          } else {\n            this.setState({\n              login_success: false\n            });\n            console.log('failure');\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in login form fields.\");\n    }\n  }\n\n  callRegister() {\n    if (this.state.regis_password && this.state.regis_username) {\n      const regisData = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      $.ajax({\n        url: 'http://localhost:4000/register',\n        type: 'POST',\n        contentType: \"application/json; charset=utf-8\",\n        crossDomain: true,\n        dataType: 'json',\n        data: JSON.stringify(regisData),\n        success: data => {\n          if (data) {\n            this.setState({\n              regis_success: true\n            });\n            console.log('success');\n          } else {\n            this.setState({\n              regis_success: false\n            });\n            console.log('failure');\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in register form fields.\");\n    }\n  }\n\n  callEnrollAdmin() {\n    if (this.state.admin_id && this.state.admin_pw) {\n      const adminData = {\n        id: this.state.admin_id,\n        pw: this.state.admin_pw\n      };\n      $.ajax({\n        url: 'http://localhost:4000/enroll',\n        type: 'POST',\n        contentType: \"application/json; charset=utf-8\",\n        crossDomain: true,\n        dataType: 'json',\n        data: JSON.stringify(adminData),\n        success: data => {\n          if (data) {\n            this.setState({\n              enroll_success: true\n            });\n            console.log('success');\n          } else {\n            this.setState({\n              enroll_success: false\n            });\n            console.log('failure');\n          }\n        }\n      });\n    } else {\n      alert(\"Please fill in admin form fields.\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"interface\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"loginFormField\",\n      placeholder: \"Username\",\n      onChange: this.handleUserLoginChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"loginFormField\",\n      placeholder: \"Password\",\n      onChange: this.handlePasswordLoginChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      onClick: this.callLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"registerUserForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"regFormField\",\n      placeholder: \"Username\",\n      onChange: this.handleUserRegisChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"regFormField\",\n      placeholder: \"Password\",\n      onChange: this.handlePasswordRegisChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      onClick: this.callRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"enrollAdminForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"adFormField\",\n      placeholder: \"Admin ID\",\n      onChange: this.handleAdminIdChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"adFormField\",\n      placeholder: \"Admin Password\",\n      onChange: this.handleAdminPwChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Enroll\",\n      onClick: this.callEnrollAdmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Interface;","map":{"version":3,"sources":["C:\\Dev\\hlf-ca-interface\\frontend\\src\\components\\Interface.js"],"names":["React","Component","$","Interface","constructor","props","onChange","e","setState","target","id","value","handleUserLoginChange","event","preventDefault","login_username","handlePasswordLoginChange","login_password","handleUserRegisChange","regis_username","handlePasswordRegisChange","regis_password","handleAdminIdChange","admin_id","handleAdminPwChange","admin_pw","state","login_success","regis_success","enroll_success","bind","callLogin","callEnrollAdmin","callRegister","loginData","username","password","ajax","url","type","contentType","crossDomain","dataType","data","JSON","stringify","success","console","log","alert","regisData","adminData","pw","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass Interface extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login_username: \"\",\r\n      login_password: \"\",\r\n      regis_username: \"\",\r\n      regis_password: \"\",\r\n      admin_id: \"\",\r\n      admin_pw: \"\",\r\n      login_success: \"\",\r\n      regis_success: \"\",\r\n      enroll_success: \"\"\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleUserLoginChange = this.handleUserLoginChange.bind(this);\r\n    this.handleUserRegisChange = this.handleUserRegisChange.bind(this);\r\n    this.handlePasswordLoginChange = this.handlePasswordLoginChange.bind(this);\r\n    this.handlePasswordRegisChange = this.handlePasswordRegisChange.bind(this);\r\n    this.handleAdminIdChange = this.handleAdminIdChange.bind(this);\r\n    this.handleAdminPwChange = this.handleAdminPwChange.bind(this);\r\n    this.callLogin = this.callLogin.bind(this);\r\n    this.callEnrollAdmin = this.callEnrollAdmin.bind(this);\r\n    this.callRegister = this.callRegister.bind(this);\r\n\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleUserLoginChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ login_username: event.target.value });\r\n  }\r\n\r\n  handlePasswordLoginChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ login_password: event.target.value });\r\n  }\r\n\r\n  handleUserRegisChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ regis_username: event.target.value });\r\n  }\r\n\r\n  handlePasswordRegisChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ regis_password: event.target.value });\r\n  }\r\n\r\n  handleAdminIdChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ admin_id: event.target.value });\r\n  }\r\n\r\n  handleAdminPwChange = event => {\r\n    event.preventDefault()\r\n    this.setState({ admin_pw: event.target.value });\r\n  }\r\n\r\n  callLogin() {\r\n    if (this.state.login_password && this.state.login_username) {\r\n      const loginData = {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      }\r\n      $.ajax({\r\n        url: 'http://localhost:4000/login',\r\n        type: 'POST',\r\n        contentType: \"application/json; charset=utf-8\",\r\n        crossDomain: true,\r\n        dataType: 'json',\r\n        data: JSON.stringify(loginData),\r\n        success: (data) => {\r\n          console.log(data);\r\n          if (data) {\r\n            this.setState({ login_success: true });\r\n            console.log('success');\r\n          } else {\r\n            this.setState({ login_success: false });\r\n            console.log('failure');\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Please fill in login form fields.\")\r\n    }\r\n  }\r\n\r\n  callRegister() {\r\n    if (this.state.regis_password && this.state.regis_username) {\r\n      const regisData = {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      }\r\n      $.ajax({\r\n        url: 'http://localhost:4000/register',\r\n        type: 'POST',\r\n        contentType: \"application/json; charset=utf-8\",\r\n        crossDomain: true,\r\n        dataType: 'json',\r\n        data: JSON.stringify(regisData),\r\n        success: (data) => {\r\n          if (data) {\r\n            this.setState({ regis_success: true });\r\n            console.log('success');\r\n          } else {\r\n            this.setState({ regis_success: false });\r\n            console.log('failure');\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Please fill in register form fields.\")\r\n    }\r\n  }\r\n\r\n  callEnrollAdmin() {\r\n    if (this.state.admin_id && this.state.admin_pw) {\r\n      const adminData = {\r\n        id: this.state.admin_id,\r\n        pw: this.state.admin_pw\r\n      }\r\n      $.ajax({\r\n        url: 'http://localhost:4000/enroll',\r\n        type: 'POST',\r\n        contentType: \"application/json; charset=utf-8\",\r\n        crossDomain: true,\r\n        dataType: 'json',\r\n        data: JSON.stringify(adminData),\r\n        success: (data) => {\r\n          if (data) {\r\n            this.setState({ enroll_success: true });\r\n            console.log('success');\r\n          } else {\r\n            this.setState({ enroll_success: false });\r\n            console.log('failure');\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      alert(\"Please fill in admin form fields.\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"interface\">\r\n        <div className=\"loginForm\">\r\n          <input type=\"text\" className=\"loginFormField\" placeholder=\"Username\" onChange={this.handleUserLoginChange} />\r\n          <input type=\"password\" className=\"loginFormField\" placeholder=\"Password\" onChange={this.handlePasswordLoginChange} />\r\n          <input type=\"submit\" value=\"Login\" onClick={this.callLogin}></input>\r\n        </div>\r\n        <div className=\"registerUserForm\">\r\n          <input type=\"text\" className=\"regFormField\" placeholder=\"Username\" onChange={this.handleUserRegisChange} />\r\n          <input type=\"password\" className=\"regFormField\" placeholder=\"Password\" onChange={this.handlePasswordRegisChange} />\r\n          <input type=\"submit\" value=\"Register\" onClick={this.callRegister}></input>\r\n        </div>\r\n        <div className=\"enrollAdminForm\">\r\n          <input type=\"text\" className=\"adFormField\" placeholder=\"Admin ID\" onChange={this.handleAdminIdChange} />\r\n          <input type=\"password\" className=\"adFormField\" placeholder=\"Admin Password\" onChange={this.handleAdminPwChange} />\r\n          <input type=\"submit\" value=\"Enroll\" onClick={this.callEnrollAdmin}></input>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interface;"]},"metadata":{},"sourceType":"module"}